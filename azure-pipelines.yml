trigger:
- master

variables:
- group: 'test-group'

pool:
  name: 'Default'

steps:

- task: PowerShell@2
  displayName: Create Assignment
  inputs:
    targetType: 'inline'
    script: |
      $headers = @{
        "Authorization" = "$(cesAuth)"
        "Content-Type" = "application/json"
      }

      $body = @{
        "stream" = "GITDEMO"
        "application" = "GIT1"
        "subAppl" = "GIT1"
        "defaultPath" = "WRK2"
        "description" = "assignment for SCRUM-1"
        "assignmentPrefix" = "GIT1"
      } | ConvertTo-Json

      # Log headers and body
      Write-Host "Headers: $($headers | ConvertTo-Json)"
      Write-Host "Body: $body"

      try {
        $response = Invoke-WebRequest -Uri "http://cwcc.bmc.com:2020/ispw/iccga/assignments/" -Method POST -Headers $headers -Body $body -ContentType "application/json"
        Write-Host "Response: $($response.Content)"
      }
      catch {
        Write-Host "Error: $($_.Exception.Message)"
        if ($_.Exception.Response -ne $null) {
          $responseStream = [System.IO.StreamReader]::new($_.Exception.Response.GetResponseStream())
          $responseBody = $responseStream.ReadToEnd()
          Write-Host "Response Body: $responseBody"
        }
        exit 1
      }

      $responseContent = $response.Content | ConvertFrom-Json
      $myAssignmentId = $responseContent.assignmentId
      Write-Host "myAssignmentId: $myAssignmentId"
    
- task: PowerShell@2
  displayName: 'Jira Post Comment'
  inputs:
    targetType: 'inline'
    script: |
      # Define headers
      $headers = @{
          "Accept" = "application/json"
      }

      # Define credentials and encode for Basic Authentication
      $username = "eraso.xavier@gmail.com"
      $jiraToken = "$(jiraToken)"  # Ensure $(jiraToken) is replaced with your actual Jira API token
      $credentials = "$($username):$($jiraToken)"
      $bytes = [System.Text.Encoding]::UTF8.GetBytes($credentials)
      $encodedCredentials = [Convert]::ToBase64String($bytes)
      $headers["Authorization"] = "Basic $encodedCredentials"
      $body = @{
                content = @[
                    @{
                        content = @[
                            @{
                                text = "Test Pipeline"
                                type = "text"
                            }
                        ]
                        type = "paragraph"
                    }
                ]
                type = "doc"
                version = 1
            } | ConvertTo-Json

      # Construct the body with dynamic assignmentId

      $response = Invoke-WebRequest -Uri "https://erasoxavier.atlassian.net/rest/api/2/issue/SCRUM-1/comment" -Method POST -Headers $headers -Body $body -ContentType "application/json"
      

- task: PowerShell@2
  displayName: Jira Get Comment
  inputs:
    targetType: 'inline'
    script: |
      $headers = @{
        "Accept" = "application/json"
      }
      $credentials = "eraso.xavier@gmail.com:$(jiraToken)"
      $Bytes = [System.Text.Encoding]::UTF8.GetBytes($credentials)
      $encodedCredentials = [Convert]::ToBase64String($Bytes)
      $headers["Authorization"] = "Basic $encodedCredentials"
      $response = Invoke-WebRequest -Uri "https://erasoxavier.atlassian.net/rest/api/2/issue/SCRUM-1/comment" -Method GET -Headers $headers

      # Convert the response content to a JSON object
      $parsedJson = $response.Content | ConvertFrom-Json

      # Access the 'body' field of the first comment in the 'comments' array
      $text = $parsedJson.comments[0].body

      Write-Host "Affichage :"
      # Write-Host $response removed to avoid cluttering the output with raw HTML/JSON
      Write-Host $text
